parser: babel-eslint
parserOptions:
  ecmaFeatures:
    # jsx: true
  sourceType: module

settings:
  import/resolver:
    webpack:
      config: ./webpack.config.js

env:
  browser: true
  es6: true
  # node: true
  mocha: true

plugins:
  - prettier
  - flowtype
  - header
  - flowtype-errors
  - mocha
  - filenames
  - import

extends:
  - eslint:recommended
  - prettier
  - prettier/flowtype
  - plugin:flowtype/recommended
  - plugin:mocha/recommended

globals:
  expect: readonly
  sandbox: readonly
  require: readonly
  __dirname: readonly
  process: readonly
  module: readonly

# Rules for only some file locations/paths (globs)
overrides:
  - files:
    - src/*.js
    excludedFiles: spec/*.js
    rules:
      header/header:
        - error
        - block
        - pattern: ^\*\n
                    \* \@flow\n
                   (\*\n
                    \* .*\n )?$
      # Flow Type Rules
      flowtype/require-variable-type:
        - warn
      flowtype/require-return-type:
        - warn
        - always
        - excludeMatching:
          - "spec.js"
      flowtype/require-parameter-type:
        - warn
      flowtype/no-weak-types:
        - warn
      flowtype-errors/show-errors:
        - error
      flowtype-errors/show-warnings:
        - warn

# TODO: File naming conventions
# Example:
 # - files:
 #   - src/controllers/*.js
 #   rules:
 #     filenames/match-regex:
 #       - error
 #       - .*\.controller(\.spec)?$

# Custom Rules Below
rules:
  # Documentation Rules
  valid-jsdoc: error
  require-jsdoc:
    - warn
    - require:
        FunctionDeclaration: true
        MethodDefinition: true
        ClassDeclaration: true

  # Naming conventions
  id-length:
    - warn
    - min: 3
      exceptions:
      - id
      - i
      - it
      - _
      - fs
  new-cap:
    - error
  camelcase:
    - warn

  # File Conventions
  max-len:
    - warn
    - code: 110
      ignoreUrls: true
  max-lines:
    - warn
    - max: 500
      skipComments: true
  eol-last:
    - error
    - always
  linebreak-style:
    - error
    - unix

  # Import Rules
  import/no-unresolved:
    - error
  import/no-absolute-path:
    - error
  import/no-dynamic-require:
    - error
  import/no-self-import:
    - error
  import/no-cycle:
    - error
  import/export:
    - error
  import/no-named-as-default:
    - warn
  import/no-named-as-default-member:
    - warn
  import/no-mutable-exports:
    - warn
  import/first:
    - warn
  import/no-duplicates:
    - warn
  import/newline-after-import:
    - error
  import/prefer-default-export:
    - warn

  # Basic Rules
  no-var: error
  prefer-const: error
  no-shadow: error

  no-duplicate-imports: error
  class-methods-use-this: warn
  require-await: warn

  no-console:
    - warn
  no-alert:
    - error

  no-empty-function:
    - warn

  eqeqeq:
    - error
    - always
  no-lonely-if: error

  indent:
    - error
    - 2
  quotes:
    - error
    - single
  prefer-template:
    - error
  semi:
    - error
    - always

  # Spacing
  no-trailing-spaces: error
  space-infix-ops: error
  space-before-blocks: error
  spaced-comment:
    - error
    - always
  space-in-parens:
    - error
    - never
  space-before-function-paren:
    - error
    - never
  keyword-spacing:
    - error
    - before: true
      after: true

  # Array/Comma Spacing
  comma-spacing:
    - error
    - after: true
  array-bracket-newline:
    - error
    - multiline: true
      minItems: 3
  array-element-newline:
    - error
    - multiline: true
      minItems: 3
  comma-dangle:
    - error
    - arrays: only-multiline
      objects: only-multiline
      imports: never
      exports: never
      functions: ignore

  # Object Spacing
  key-spacing:
    - error
    - afterColon: true
  object-curly-spacing:
    - error
    - always
  object-curly-newline:
    - error
    - consistent: true

  # Arrow Function Conventions
  arrow-body-style:
    - error
    - always
  arrow-parens:
    - error
    - always
  arrow-spacing: error
  # prefer-arrow-callback:
  #   - error
  #   - allowNamedFunctions: true
  # Mocha prefers function() style to set `this`: http://mochajs.org/#arrow-functions
  prefer-arrow-callback:
    - off
  mocha/prefer-arrow-callback:
    - error
